/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tiket;
import com.mysql.jdbc.Connection; // kode untuk membuat koneksi ke database
import java.sql.ResultSet; // Menjalankan query dan menyimpan hasilnya dalam ResultSet
import java.sql.Statement; // digunnakan untuk mengendalikan database dan melakukan berbagai operasi di dalamnnya
import java.sql.SQLException; //kelas yang digunakan untuk memberi peringatan saat ada eror
import javax.swing.JOptionPane; //kelas yang berguna untuk membuat program Java kita menjadi lebih interaktif dengan pengguna.
import javax.swing.table.DefaultTableModel; //adalah langkah awal untuk membuat dan mengelola tabel dalam aplikasi Java yang menggunakan Swing
import net.sf.jasperreports.engine.JasperFillManager; //JasperFillManager adalah kelas dalam library JasperReports yang digunakan untuk mengisi laporan (report) dengan data dari sumber tertentu
import net.sf.jasperreports.engine.JasperPrint; //Objek JasperPrint menyimpan informasi laporan, seperti halaman, konten, dan parameter, yang dapat digunakan untuk ditampilkan, dicetak, atau diekspor
import net.sf.jasperreports.view.JasperViewer; //Kelas yang digunakan untuk memeriksa laporan yang telah diisi sebelum mencetak atau mengekspornya ke format tertentu

/**
 *
 * @author DELL
 */
public class Penumpang extends javax.swing.JFrame {

    Connection con; //digunakan untuk menghubungkan program kita dengan database. 
    Statement st;  //digunakan untuk mengirimkan perintah (query) ke database.
    ResultSet rs; //digunakan mengambil data dari database dan memprosesnya sesuai kebutuhan
        
    /**
     * Creates new form Penumpang
     */
    public Penumpang() {
        initComponents(); // Inisialisasi komponen-komponen GUI (misalnya: tabel, tombol, label)
        Koneksi.getKoneksi(); // Membangun koneksi ke database
        data();  // Memanggil metode untuk mengambil dan menampilkan data dari database
    }
    //langkah awal untuk membuat dan menyiapkan objek Penumpang

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        penumpang = new javax.swing.JTable();
        cmb_cari = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        txt_cari = new javax.swing.JTextField();
        Hapus = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        penumpang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nama", "Alamat", "Kereta", "Gerbong", "Stasiun Tujuan", "Jam Berangkatl", "Jam Tiba", "Tanggal", "Dewasa", "Anak", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(penumpang);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 1000, 326));

        cmb_cari.setBackground(new java.awt.Color(102, 102, 255));
        cmb_cari.setText("CARI");
        cmb_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_cariActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 90, 30));

        jComboBox1.setBackground(new java.awt.Color(153, 153, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "NAMA" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 78, 30));

        txt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cariActionPerformed(evt);
            }
        });
        jPanel1.add(txt_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 790, 30));

        Hapus.setBackground(new java.awt.Color(0,0,0,0));
        Hapus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });
        jPanel1.add(Hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 589, 160, 60));

        jButton1.setBackground(new java.awt.Color(0,0,0,0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 590, 150, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/desain/FROM PENUMPANG.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 710));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 710));

        jMenu1.setText("File");

        jMenuItem1.setText("Keluar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tiket");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            String reportName = "src/report/penumpang.jasper";
            JasperPrint jPrint = JasperFillManager.fillReport(reportName, null, Koneksi.getKoneksi());
            JasperViewer.viewReport(jPrint, false);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        //Kode ini adalah bagian dari aplikasi yang menggunakan JasperReports untuk menghasilkan laporan
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
        //menutup jendela atau frame
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void home(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home
        new Home().setVisible(true); 
        dispose(); // Kelas Home ini diasumsikan merupakan sebuah kelas yang mewarisi JFrame atau kelas jendela lainnya, sehingga new Home() akan menciptakan sebuah jendela baru
       
    }//GEN-LAST:event_home

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
        try{
            int pesan = JOptionPane.showOptionDialog(this, "Yakin Ingin Menghapus Data?","Benarr",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null,null,null);
            if (pesan == JOptionPane.YES_OPTION){  //Dialog ini menampilkan pesan "Yakin Ingin Menghapus Data?" dengan dua pilihan: "Ya" dan "Tidak".
                con = Koneksi.getKoneksi();
                String sql = "DELETE FROM penumpang"; //dijalankan untuk menghapus semua data dari tabel "penumpang"
                st = con.createStatement();
                st.execute(sql);
                JOptionPane.showMessageDialog(null,"Berhasil");
                DefaultTableModel model = (DefaultTableModel) penumpang.getModel();
                model.setRowCount(0); //Tabel yang menampilkan data penumpang di-refresh dengan menghapus semua baris 
                data(); 
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_HapusActionPerformed

    private void txt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cariActionPerformed

    private void cmb_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_cariActionPerformed
     try {
        con = Koneksi.getKoneksi(); // Membuat koneksi ke database

        // Mendapatkan input dari user untuk ID atau Nama
        String searchText = txt_cari.getText();
        String selectedCriteria = jComboBox1.getSelectedItem().toString();
        String sql = "";

        // Query untuk mencari data berdasarkan ID atau Nama
        if (selectedCriteria.equals("ID")) {
            sql = "SELECT * FROM penumpang WHERE id LIKE '%" + searchText + "%'";
        } else if (selectedCriteria.equals("NAMA")) {
            sql = "SELECT * FROM penumpang WHERE nama LIKE '%" + searchText + "%'";
        }

        st = con.createStatement();
        rs = st.executeQuery(sql);

        // Mengosongkan tabel sebelum menampilkan hasil pencarian
        DefaultTableModel model = (DefaultTableModel) penumpang.getModel();
        model.setRowCount(0);

        // Mengisi tabel dengan data hasil pencarian
        while (rs.next()) {
            Object[] row = new Object[13];
            row[0] = rs.getString("id");
            row[1] = rs.getString("nama");
            row[2] = rs.getString("alamat");
            row[3] = rs.getString("kereta");
            row[4] = rs.getString("gerbong");
            row[5] = rs.getString("awal");
            row[6] = rs.getString("tujuan");
            row[7] = rs.getString("berangkat");
            row[8] = rs.getString("tiba");
            row[9] = rs.getString("tanggal");
            row[10] = rs.getString("dewasa");
            row[11] = rs.getString("anak");
            row[12] = rs.getString("total");

            model.addRow(row); // Menambahkan data ke tabel
        }

        // No message dialog for no data found
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_cmb_cariActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void data(){
     try{
            con = Koneksi.getKoneksi();   // Membuat koneksi ke database
            String sql1 = "SELECT * FROM penumpang order by id ASC";  // Query untuk mengambil semua data penumpang, diurutkan berdasarkan ID
            st = con.createStatement();  // Membuat statement untuk menjalankan query
            rs = st.executeQuery(sql1);  // Eksekusi query dan simpan hasilnya dalam ResultSet
            while(rs.next()){  // Looping untuk setiap baris data yang ditemukan
                DefaultTableModel model = (DefaultTableModel) penumpang.getModel(); // Mendapatkan model tabel dari komponen tampilan "penumpang"
                Object[] row = new Object[13]; // Membuat array untuk menampung data satu baris
           // Mengisi array dengan data dari setiap kolom
                row[0] = rs.getString("id");
                row[1] = rs.getString("nama");
                row[2] = rs.getString("alamat");
                row[3] = rs.getString("kereta");
                row[4] = rs.getString("gerbong");
                row[5] = rs.getString("awal");
                row[6] = rs.getString("tujuan");
                row[7] = rs.getString("berangkat");
                row[8] = rs.getString("tiba");
                row[9] = rs.getString("tanggal");
                row[10] = rs.getString("dewasa");
                row[11] = rs.getString("anak");
                row[12] = rs.getString("total");
                
                model.addRow(row);
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penumpang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penumpang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penumpang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penumpang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penumpang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hapus;
    private javax.swing.JButton cmb_cari;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable penumpang;
    private javax.swing.JTextField txt_cari;
    // End of variables declaration//GEN-END:variables
}
